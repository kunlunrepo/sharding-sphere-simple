# 水平分库水平分表绑定
spring:
  shardingsphere:
    props:
      sql-show: true # 打印SQL
    datasource: # 数据源
      names: db0,db1
      db0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.10.90:3306/msb_course_db0?characterEncoding=UTF-8&useSSL=false
        username: root
        password: 123456
      db1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.10.90:3306/msb_course_db1?characterEncoding=UTF-8&useSSL=false
        username: root
        password: 123456
    rules: # 规则
      sharding:
        tables:
          t_course:
            actual-data-nodes: db$->{0..1}.t_course_$->{0..1} # 范围区间
            database-strategy: # 分库策略
              standard:
                sharding-column: user_id # 分片列名称
                sharding-algorithm-name: database-mod # 分片算法名称
            table-strategy: # 分表策略
              standard:
                sharding-column: corder_no # 分片键名称
                sharding-algorithm-name: table-hash-mod # 分片算法名称
            key-generate-strategy:
              column: cid # 分布式序列-列名称
              key-generator-name: alg_snowflake # 算法名称
          t_course_section:
            actual-data-nodes: db$->{0..1}.t_course_section_$->{0..1} # 范围区间
            database-strategy: # 分库策略
              standard:
                sharding-column: user_id # 分片列名称
                sharding-algorithm-name: database-mod # 分片算法名称
            table-strategy: # 分表策略
              standard:
                sharding-column: corder_no # 分片键名称
                sharding-algorithm-name: table-hash-mod # 分片算法名称
            key-generate-strategy:
              column: id # 分布式序列-列名称
              key-generator-name: alg_snowflake # 算法名称
        sharding-algorithms:
          database-inline:
            type: INLINE # 分片算法类型：行表达式分片算法
            props:
              algorithm-expression: db$->{user_id % 2} # 分片算法表达式
          inline-hash-mod:
            type: INLINE #
            props:
              algorithm-expression: t_course_$->{Math.abs(cid.hashCode()) % 2}
          database-mod:
            type: MOD
            props:
              sharding-count: 2
          table-hash-mod:
            type: HASH_MOD
            props:
              sharding-count: 2
        key-generators:
          alg_snowflake:
            type: SNOWFLAKE # 主键策略
        binding-tables[0]: t_course,t_course_section






